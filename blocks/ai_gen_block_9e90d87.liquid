{% doc %}
  @prompt
    Create a responsive videos slider component that displays multiple videos in a carousel format with navigation controls, autoplay options, and mobile-friendly design

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-video-slider-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    margin: 20px 0;
  }

  .ai-video-slider__container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.slider_height }}px;
    background: linear-gradient(to bottom, rgba(0,0,0,0.02), rgba(0,0,0,0.05));
  }

  .ai-video-slider__track-{{ ai_gen_id }} {
    display: flex;
    width: 100%;
    height: 100%;
    transition: transform 0.5s ease;
    will-change: transform;
  }

  .ai-video-slider__slide-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.slides_per_view }}%;
    width: {{ block.settings.slides_per_view }}%;
    height: 100%;
    padding: 0 {{ block.settings.slide_spacing }}px;
    box-sizing: border-box;
  }

  .ai-video-slider__video-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: #000;
    border-radius: {{ block.settings.video_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .ai-video-slider__video-wrapper-{{ ai_gen_id }}:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .ai-video-slider__video-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transition: transform 0.5s ease, opacity 0.5s ease-in-out;
    opacity: 0;
  }

  .ai-video-slider__video-{{ ai_gen_id }}.loaded {
    opacity: 1;
  }

  .ai-video-slider__loading-spinner-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #ffffff;
    animation: ai-spinner-{{ ai_gen_id }} 1s linear infinite;
    z-index: 1;
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .ai-video-slider__loading-spinner-{{ ai_gen_id }}.hidden {
    opacity: 0;
  }

  @keyframes ai-spinner-{{ ai_gen_id }} {
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  .ai-video-slider__video-wrapper-{{ ai_gen_id }}:hover .ai-video-slider__video-{{ ai_gen_id }} {
    transform: scale(1.02);
  }

  .ai-video-slider__video-overlay-{{ ai_gen_id }} {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0) 100%);
    pointer-events: none;
    z-index: 1;
  }

  .ai-video-slider__play-button-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70px;
    height: 70px;
    background-color: rgba(255, 255, 255, 0.95);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 2;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .ai-video-slider__play-button-{{ ai_gen_id }}:hover {
    background-color: rgba(255, 255, 255, 1);
    transform: translate(-50%, -50%) scale(1.1);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
  }

  .ai-video-slider__play-button-{{ ai_gen_id }}:active {
    transform: translate(-50%, -50%) scale(0.95);
  }

  .ai-video-slider__play-button-{{ ai_gen_id }}.hidden {
    opacity: 0;
    pointer-events: none;
  }

  .ai-video-slider__play-icon-{{ ai_gen_id }} {
    width: 24px;
    height: 24px;
    margin-left: 3px;
  }

  .ai-video-slider__navigation-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background-color: {{ block.settings.nav_button_color }};
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 3;
    color: {{ block.settings.nav_button_icon_color }};
  }

  .ai-video-slider__navigation-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-video-slider__navigation-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: translateY(-50%);
  }

  .ai-video-slider__prev-{{ ai_gen_id }} {
    left: 10px;
  }

  .ai-video-slider__next-{{ ai_gen_id }} {
    right: 10px;
  }

  .ai-video-slider__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 20px;
  }

  .ai-video-slider__dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-video-slider__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
    transform: scale(1.2);
  }

  .ai-video-slider__title-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 20px;
    right: 20px;
    color: {{ block.settings.title_color }};
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    z-index: 2;
  }

  @media screen and (max-width: 768px) {
    .ai-video-slider__slide-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.slides_per_view_mobile }}%;
      width: {{ block.settings.slides_per_view_mobile }}%;
    }

    .ai-video-slider__container-{{ ai_gen_id }} {
      height: {{ block.settings.slider_height | times: 0.7 }}px;
    }

    .ai-video-slider__navigation-{{ ai_gen_id }} {
      width: 35px;
      height: 35px;
    }

    .ai-video-slider__prev-{{ ai_gen_id }} {
      left: 5px;
    }

    .ai-video-slider__next-{{ ai_gen_id }} {
      right: 5px;
    }

    .ai-video-slider__title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.8 }}px;
      bottom: 15px;
      left: 15px;
      right: 15px;
    }
  }

  @media screen and (max-width: 480px) {
    .ai-video-slider__slide-{{ ai_gen_id }} {
      padding: 0 {{ block.settings.slide_spacing | divided_by: 2 }}px;
    }
  }
{% endstyle %}

<video-slider-{{ ai_gen_id }}
  class="ai-video-slider-{{ ai_gen_id }}"
  data-autoplay="{{ block.settings.autoplay }}"
  data-autoplay-delay="{{ block.settings.autoplay_delay }}"
  data-loop="{{ block.settings.loop }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-video-slider__container-{{ ai_gen_id }}">
    <div class="ai-video-slider__track-{{ ai_gen_id }}">
      {% for i in (1..6) %}
        {% assign video_key = 'video_' | append: i %}
        {% assign title_key = 'video_title_' | append: i %}
        {% assign video = block.settings[video_key] %}
        {% assign title = block.settings[title_key] %}
        
        {% if video != blank %}
          <div class="ai-video-slider__slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
            <div class="ai-video-slider__video-wrapper-{{ ai_gen_id }}">
              <video
                class="ai-video-slider__video-{{ ai_gen_id }}"
                {% if block.settings.muted %}muted{% endif %}
                {% if block.settings.loop_individual %}loop{% endif %}
                preload="metadata"
                playsinline
              >
                <source src="{{ video }}" type="video/mp4">
              </video>
              
              <button class="ai-video-slider__play-button-{{ ai_gen_id }}" aria-label="Play video">
                <svg class="ai-video-slider__play-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </button>

              {% if title != blank %}
                <div class="ai-video-slider__title-{{ ai_gen_id }}">{{ title }}</div>
              {% endif %}
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {% if block.settings.show_navigation %}
      <button class="ai-video-slider__navigation-{{ ai_gen_id }} ai-video-slider__prev-{{ ai_gen_id }}" aria-label="Previous video">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      
      <button class="ai-video-slider__navigation-{{ ai_gen_id }} ai-video-slider__next-{{ ai_gen_id }}" aria-label="Next video">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    {% endif %}
  </div>

  {% if block.settings.show_dots %}
    <div class="ai-video-slider__dots-{{ ai_gen_id }}"></div>
  {% endif %}
</video-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class VideoSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 0;
        this.autoplayInterval = null;
        this.isPlaying = false;
      }

      connectedCallback() {
        this.track = this.querySelector('.ai-video-slider__track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-video-slider__slide-{{ ai_gen_id }}');
        this.prevBtn = this.querySelector('.ai-video-slider__prev-{{ ai_gen_id }}');
        this.nextBtn = this.querySelector('.ai-video-slider__next-{{ ai_gen_id }}');
        this.dotsContainer = this.querySelector('.ai-video-slider__dots-{{ ai_gen_id }}');
        
        this.totalSlides = this.slides.length;
        
        if (this.totalSlides === 0) return;

        this.setupEventListeners();
        this.createDots();
        this.updateSlider();
        this.setupAutoplay();
        this.setupVideoControls();
      }

      setupEventListeners() {
        if (this.prevBtn) {
          this.prevBtn.addEventListener('click', () => this.prevSlide());
        }
        
        if (this.nextBtn) {
          this.nextBtn.addEventListener('click', () => this.nextSlide());
        }

        this.addEventListener('mouseenter', () => this.pauseAutoplay());
        this.addEventListener('mouseleave', () => this.resumeAutoplay());

        window.addEventListener('resize', () => this.updateSlider());
      }

      setupVideoControls() {
        this.slides.forEach((slide) => {
          const video = slide.querySelector('.ai-video-slider__video-{{ ai_gen_id }}');
          const playBtn = slide.querySelector('.ai-video-slider__play-button-{{ ai_gen_id }}');
          
          if (video && playBtn) {
            playBtn.addEventListener('click', () => {
              if (video.paused) {
                this.pauseAllVideos();
                video.play();
                playBtn.classList.add('hidden');
                this.pauseAutoplay();
              } else {
                video.pause();
                playBtn.classList.remove('hidden');
                this.resumeAutoplay();
              }
            });

            video.addEventListener('ended', () => {
              playBtn.classList.remove('hidden');
              this.resumeAutoplay();
            });

            video.addEventListener('click', () => {
              if (!video.paused) {
                video.pause();
                playBtn.classList.remove('hidden');
                this.resumeAutoplay();
              }
            });
          }
        });
      }

      pauseAllVideos() {
        this.slides.forEach((slide) => {
          const video = slide.querySelector('.ai-video-slider__video-{{ ai_gen_id }}');
          const playBtn = slide.querySelector('.ai-video-slider__play-button-{{ ai_gen_id }}');
          
          if (video && !video.paused) {
            video.pause();
            if (playBtn) playBtn.classList.remove('hidden');
          }
        });
      }

      createDots() {
        if (!this.dotsContainer) return;
        
        this.dotsContainer.innerHTML = '';
        
        for (let i = 0; i < this.totalSlides; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-video-slider__dot-{{ ai_gen_id }}';
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateSlider() {
        if (!this.track) return;

        const slideWidth = this.slides[0].offsetWidth;
        const offset = -this.currentSlide * slideWidth;
        
        this.track.style.transform = `translateX(${offset}px)`;
        
        this.updateNavigation();
        this.updateDots();
      }

      updateNavigation() {
        if (this.prevBtn) {
          this.prevBtn.disabled = this.currentSlide === 0 && !this.dataset.loop;
        }
        
        if (this.nextBtn) {
          this.nextBtn.disabled = this.currentSlide === this.totalSlides - 1 && !this.dataset.loop;
        }
      }

      updateDots() {
        if (!this.dotsContainer) return;
        
        const dots = this.dotsContainer.querySelectorAll('.ai-video-slider__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      nextSlide() {
        this.pauseAllVideos();
        
        if (this.currentSlide < this.totalSlides - 1) {
          this.currentSlide++;} else if (this.dataset.loop === 'true') {
          this.currentSlide = 0;
        }
        
        this.updateSlider();
      }

      prevSlide() {
        this.pauseAllVideos();
        
        if (this.currentSlide > 0) {
          this.currentSlide--;
        } else if (this.dataset.loop === 'true') {
          this.currentSlide = this.totalSlides - 1;
        }
        
        this.updateSlider();
      }

      goToSlide(index) {
        this.pauseAllVideos();
        this.currentSlide = index;
        this.updateSlider();
      }

      setupAutoplay() {
        if (this.dataset.autoplay === 'true') {
          this.startAutoplay();
        }
      }

      startAutoplay() {
        this.pauseAutoplay();
        const delay = parseInt(this.dataset.autoplayDelay) * 1000;
        
        this.autoplayInterval = setInterval(() => {
          this.nextSlide();
        }, delay);
      }

      pauseAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }

      resumeAutoplay() {
        if (this.dataset.autoplay === 'true') {
          this.startAutoplay();
        }
      }

      disconnectedCallback() {
        this.pauseAutoplay();
      }
    }

    customElements.define('video-slider-{{ ai_gen_id }}', VideoSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Video Slider",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slider_height",
      "min": 200,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Slider height",
      "default": 400
    },
    {
      "type": "select",
      "id": "slides_per_view",
      "label": "Slides per view (desktop)",
      "options": [
        {
          "value": "100",
          "label": "1"
        },
        {
          "value": "50",
          "label": "2"
        },
        {
          "value": "33.333",
          "label": "3"
        }
      ],
      "default": "50"
    },
    {
      "type": "select",
      "id": "slides_per_view_mobile",
      "label": "Slides per view (mobile)",
      "options": [
        {
          "value": "100",
          "label": "1"
        },
        {
          "value": "50",
          "label": "2"
        }
      ],
      "default": "100"
    },
    {
      "type": "range",
      "id": "slide_spacing",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Space between slides",
      "default": 10
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay delay",
      "default": 4
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "Loop slider",
      "default": true
    },
    {
      "type": "header",
      "content": "Video Settings"
    },
    {
      "type": "checkbox",
      "id": "muted",
      "label": "Mute videos by default",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "loop_individual",
      "label": "Loop individual videos",
      "default": false
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots indicator",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_icon_color",
      "label": "Navigation icon color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover color",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Slider border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "video_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Video border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 12,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title font size",
      "default": 18
    },
    {
      "type": "header",
      "content": "Video 1"
    },
    {
      "type": "video",
      "id": "video_1",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_1",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 2"
    },
    {
      "type": "video",
      "id": "video_2",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_2",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 3"
    },
    {
      "type": "video",
      "id": "video_3",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_3",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 4"
    },
    {
      "type": "video",
      "id": "video_4",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_4",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 5"
    },
    {
      "type": "video",
      "id": "video_5",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_5",
      "label": "Video title"
    },
    {
      "type": "header",
      "content": "Video 6"
    },
    {
      "type": "video",
      "id": "video_6",
      "label": "Video file"
    },
    {
      "type": "text",
      "id": "video_title_6",
      "label": "Video title"
    }
  ],
  "presets": [
    {
      "name": "Video Slider"
    }
  ]
}
{% endschema %}